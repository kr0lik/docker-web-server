version: '3'

services:
    nginx:
        container_name: my-nginx
        image: nginx:latest
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./configs/nginx:/etc/nginx/conf.d
            - ./www:/var/www/html
            - ./logs:/var/log/app
        depends_on:
            - php
        networks:
            - internal
    php:
        container_name: my-php
        #image: "php:7.3-fpm"
        build: "./images/php"
        depends_on:
            - redis
            - memcached
        volumes:
            - ./configs/php/docker.conf:/usr/local/etc/php-fpm.d/docker.conf
            - ./configs/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./www:/var/www/html
            - ./logs:/var/log/app
            - ./data/composer:/root/.composer
        environment:
            PHP_IDE_CONFIG: "serverName=docker-server"
            PHP_XDEBUG_ENABLED: 1
            # For wsl:
            XDEBUG_CONFIG: "remote_host=host.docker.internal"
        networks:
            - internal
    go:
        container_name: my-go
        image: golang:latest
        volumes:
            - ./go:/go/app
            - ./logs:/logs
        working_dir: /go/app
        ports:
            - "90:80"
        depends_on:
            - redis
            - memcached
        environment:
            PORT: 80
        command: go run test/main.go >> /logs/go.log
        networks:
            - internal
    mysql:
        container_name: my-mysql
        #image: mysql:latest
        image: mariadb:latest
        ports:
            - "3306:3306"
        depends_on:
            - adminer
        user: "1000"
        command: mysqld --innodb-flush-method=littlesync --innodb-use-native-aio=OFF --log_bin=ON
        #command: '--default-authentication-plugin=mysql_native_password'
        volumes:
            - ./data/mysql:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_ROOT_HOST: '%'
        restart: always
        networks:
            - internal
    pgsql:
        container_name: my-pgsql
        #image: postgres:latest
        build: "./images/pgsql"
        ports:
            - "5432:5432"
        depends_on:
            - adminer
        volumes:
#            - ./data/pgsql:/var/lib/postgresql/data
            - pgdata:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: postgres
        restart: on-failure
        networks:
            - internal
    adminer:
        container_name: my-adminer
        image: adminer:latest
        ports:
            - "127.0.0.1:70:8080"
        restart: always
        networks:
            - internal
    redis:
        container_name: my-redis
        image: redis:latest
        ports:
            - "6379:6379"
        volumes:
            - ./data/redis:/data
        restart: on-failure
        networks:
            - internal
    memcached:
        container_name: my-memcached
        image: memcached
        ports:
            - "11211:11211"
        restart: on-failure
        networks:
            - internal
    portainer:
        container_name: my-portainer
        image: portainer/portainer
        command: -H unix:///var/run/docker.sock
        restart: always
        ports:
            - 7000:9000
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data/portainerdata:/data
        networks:
            - internal
      
networks:
    internal:
        driver: bridge
        ipam:
            driver: default
            config:
                - subnet: 192.168.220.0/28
            
# For postgres on wsl
volumes:
    pgdata:
#        driver: local
        external: true
